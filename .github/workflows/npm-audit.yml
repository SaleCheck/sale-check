name: Security Scan for Vulnerabilities using `npm audit`

on:
  workflow_call: 
    inputs:
      working-directory:
        description: "The directory to run npm audit in"
        required: true
        type: string
  pull_request:
    branches:
      - main

jobs: 
  npm-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Debug secrets
        run: |
          echo "Secrets: ${{ toJson(secrets) }}"
          
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GH_HTTPS_TOKEN }}

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Dependencies
        run: |
          echo "Current Working Directory:"
          pwd

          echo "Switching to the working directory:"
          cd ${{ inputs.working-directory || 'functions' }}

          echo "Listing all files in printed working directory:"
          ls -al

          npm install
          sudo apt-get install -y jq  #install jq for JSON parsing

      - name: Run `npm audit`
        run: |
          cd ${{ inputs.working-directory || 'functions'}}
          npm audit --json > audit-report.json || true
          audit_output=$(npm audit) || true

          if [ -f "audit-report.json" ]; then
            echo "Printing Working Directory:"
            pwd
            echo "Listing all files in printed working directory:"
            ls -al

            critical_count=$(jq '.metadata.vulnerabilities.critical' audit-report.json)
            high_count=$(jq '.metadata.vulnerabilities.high' audit-report.json)
            vuln_count=$(jq '.metadata.vulnerabilities.total' audit-report.json)

            critical_packages=$(jq -r '.vulnerabilities | to_entries[] | select(.value.severity == "critical") | .key' audit-report.json | paste -sd "," -)
            high_packages=$(jq -r '.vulnerabilities | to_entries[] | select(.value.severity == "high") | .key' audit-report.json | paste -sd "," -)
            non_severe_packages=$(jq -r '.vulnerabilities | to_entries[] | select(.value.severity != "critical" and .value.severity != "high") | .key' audit-report.json | paste -sd "," -)

            if [ "$critical_count" -gt 0 ] && [ "$high_count" -gt 0 ]; then
              echo "::error:: Critical vulnerabilities found: $critical_count. Critical packages: $critical_packages."
              echo "::error:: High vulnerabilities found: $high_count. High severity packages: $high_packages."
              echo "$audit_output"
              exit 1
            elif [ "$critical_count" -gt 0 ]; then
              echo "::error:: Critical vulnerabilities found: $critical_count. Critical packages: $critical_packages."
              echo "$audit_output"
              exit 1
            elif [ "$high_count" -gt 0 ]; then
              echo "::error:: High vulnerabilities found: $high_count. High severity packages: $high_packages."
              echo "$audit_output"
              exit 1
            elif [ "$critical_count" -eq 0 ] && [ "$high_count" -eq 0 ] && [ "$vuln_count" -gt 0 ]; then
              echo "::warning:: Non-severe vulnerabilities found: $vuln_count. Non-severe packages: $non_severe_packages."
              echo "$audit_output"
              exit 0
            elif [ "$vuln_count" -eq 0 ] && [ "$high_count" -eq 0 ] && [ "$critical_count" -eq 0 ]; then
              echo "No vulnerabilities found."
              exit 0
            else
              echo "::error:: Security Scan Failed!"
              echo "Terminating the workflow due to unknown state of security."
              echo "$audit_output"
              exit 1
            fi
          else
            echo "::error:: audit-report.json not found. Security scan terminated."
            exit 1
          fi

          echo "::notice:: Security scan complete."

      - name: Upload Audit Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: ${{ inputs.working-directory || 'functions' }}/audit-report.json