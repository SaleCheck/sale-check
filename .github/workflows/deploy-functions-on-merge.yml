name: Deploy Firebase Functions on Merge of PR to `main` 

on:
  push:
    branches:
      - main  
  # pull_request:
  #   branches-ignore:
  #     - main

jobs:
  npm-audit:
    uses: ./.github/workflows/npm-audit-on-pr.yml
    with:
      working-directory: "functions"
    secrets:
      GH_HTTPS_TOKEN: ${{ secrets.GH_HTTPS_TOKEN }}

  npm-audit-failure-alert-email:
    runs-on: ubuntu-latest
    needs: [npm-audit] # Ensure npm-audit job is completed before this one
    if: failure()
    steps:
      - name: Retrieve audit report artifact
        uses: actions/download-artifact@v4
        with:
          name: audit-report
          path: ./audit-report

      - name: Parse audit report for email body
        id: parse_audit
        run: |
          cat ./audit-report/audit-report.json

          critical=$(jq -r '.vulnerabilities | to_entries[] | select(.value.severity == "critical") | .key' ./audit-report/audit-report.json | paste -sd "," -)
          high=$(jq -r '.vulnerabilities | to_entries[] | select(.value.severity == "high") | .key' ./audit-report/audit-report.json | paste -sd "," -)
          moderate=$(jq -r '.vulnerabilities | to_entries[] | select(.value.severity == "moderate") | .key' ./audit-report/audit-report.json | paste -sd "," -)

          echo "critical=$critical" >> $GITHUB_ENV
          echo "high=$high" >> $GITHUB_ENV
          echo "moderate=$moderate" >> $GITHUB_ENV

      - name: Send vulnerability alerting email
        uses: dawidd6/action-send-mail@v3
        with: 
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAILUSER }}   
          password: ${{ secrets.EMAILAPPPWD }}   
          subject: "⚠Sale-Check: Severe vulnerability found from 'npm audit'⚠"
          from: ${{ secrets.EMAILUSER }}   
          to: ${{ secrets.EMAILUSER }}   
          body: |
            Severe vulnerabilities found while running CI job with 'npm audit':

            🚨 Critical packages:
            - ${{ env.critical }}

            ⚠️ High severity packages:
            - ${{ env.high }}

            ⚙️ Moderate severity packages:
            - ${{ env.moderate }}

            Check the full audit report in the GitHub Actions tab and resolve immediately to ensure stable security on the platform.

  npm-test:
    needs: [npm-audit, npm-audit-failure-alert-email] # Ensure npm-audit and npm-audit-failure-alert-email job are successful before this one
    if: always() && needs.npm-audit.result == 'success'
    uses: ./.github/workflows/npm-test-on-pr.yml
    with:
      working-directory: "functions"
    secrets:
      GH_HTTPS_TOKEN: ${{ secrets.GH_HTTPS_TOKEN }}
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
      FIREBASE_SERVICE_ACCOUNT_SALE_CHECK_B611B: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SALE_CHECK_B611B }}

  firebase_functions_deploy:
    needs: [npm-test]  # Ensure npm-test (and npm-audit and npm-audit-failure-alert-email implicitly) job is successful before this one
    if: always() && needs.npm-test.result == 'success'
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GH_HTTPS_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3  
        with:
          node-version: '22'

      - name: Dependencies for 'functions' Install
        run: |
          cd functions
          npm install 

      - name: Install Firebase CLI
        run: npm install -g firebase-tools  

      - name: Authenticate with Firebase
        run: echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SALE_CHECK_B611B }}" > $HOME/firebase-key.json  # Authenticate with Firebase using service account
        env:
          FIREBASE_SERVICE_ACCOUNT_SALE_CHECK_B611B: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SALE_CHECK_B611B }}

      - name: Deploy Firebase Functions
        run: firebase deploy --only functions
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/firebase-key.json  # Points to Firebase service account key
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_AUTH_TOKEN }}  # Stored in repo secrets